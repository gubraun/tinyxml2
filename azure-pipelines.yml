# Universal Windows Platform
# Build a Universal Windows Platform project using Visual Studio.
# Add steps that test and distribute an app, save build artifacts, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/*.sln'
#  buildPlatform: 'x86|x64|ARM'
#  buildConfiguration: 'Release'
#  appxPackageDir: '$(build.artifactStagingDirectory)\AppxPackages\\'

steps:
#- script: |
#    cov-analyze --ident
#    cov-configure --config coverity_config.xml --gcc
#  displayName: 'Configure Coverity'

#- script: cov-build --config coverity_config.xml --dir idir gcc -o hello hello.c
#  displayName: 'Compile C source file'

- script:
    'C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Current\Bin\msbuild.exe /p:Configuration=Release-Dll $(solution)'

#- script: cov-analyze --dir idir 
#  displayName: 'Run Coverity analysis'

#- script: |
#    echo Add other tasks to build, test, and deploy your project.
#    echo See https://aka.ms/yaml
#  displayName: 'Run a multi-line script'

#steps:
#- task: NuGetToolInstaller@1

#- task: NuGetCommand@2
#  inputs:
#    restoreSolution: '$(solution)'

#- task: VSBuild@1
#  inputs:
#    platform: 'x86'
#    solution: '$(solution)'
#    configuration: '$(buildConfiguration)'
#    msbuildArgs: '/p:AppxBundlePlatforms="$(buildPlatform)" /p:AppxPackageDir="$(appxPackageDir)" /p:AppxBundle=Always /p:UapAppxPackageBuildMode=StoreUpload'
